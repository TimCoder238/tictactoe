{"version":3,"sources":["components/container/board/squarre/Squarre.js","components/container/select/Select.js","components/container/board/Board.js","components/container/travel/Travel.js","components/container/Container.js","App.js","index.js"],"names":["Squarre","props","btnClass","lastPos","length","size","map","lastpos","index","onClick","e","handleChange","className","value","Select","useState","nameOfClass1","setnameOfClass1","nameOfClass2","setnameOfClass2","nameOfClass3","setnameOfClass3","updateSize","Board","boardSize","setboardSize","useEffect","element","state","isFinished","isX","stepNumber","boardCopy","squarre","key","lastPosition","Travel","positionColor","setpositionColor","handleClick","jumpTo","history","arr","Container","boards","App","setSize","board","Array","fill","setState","React","boardsCopy","slice","boardArray","testX","testO","blockStart","blockEnd","i","j","increment","push","checkWinner","prev","currentFBoardCopy","currentCount","concat","selectedSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44e38de.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/squarre.style.min.css'\r\n\r\nexport default function Squarre(props) {\r\n\tlet btnClass = 'squarre'\r\n\r\n\tif (props.lastPos.length === props.size) {\r\n\t\tprops.lastPos.map((lastpos) => {\r\n\t\t\tif (props.index === lastpos) {\r\n\t\t\t\tbtnClass = 'victory'\r\n\t\t\t}\r\n\t\t\treturn btnClass\r\n\t\t})\r\n\t} else {\r\n\t\tbtnClass = 'squarre'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={(e) => props.handleChange(props.index)}\r\n\t\t\tindex={props.index}\r\n\t\t\tclassName={btnClass}\r\n\t\t>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\nimport './css/select.style.min.css'\r\nexport default function Select(props) {\r\n\tconst [nameOfClass1, setnameOfClass1] = useState('select-button-s')\r\n\tconst [nameOfClass2, setnameOfClass2] = useState('select-button')\r\n\tconst [nameOfClass3, setnameOfClass3] = useState('select-button')\r\n\r\n\tconst handleButton1 = () => {\r\n\t\tsetnameOfClass1('select-button-s')\r\n\t\tsetnameOfClass2('select-button')\r\n\t\tsetnameOfClass3('select-button')\r\n\t\tprops.updateSize(3)\r\n\t}\r\n\r\n\tconst handleButton2 = () => {\r\n\t\tsetnameOfClass2('select-button-s')\r\n\t\tsetnameOfClass1('select-button')\r\n\t\tsetnameOfClass3('select-button')\r\n\t\tprops.updateSize(4)\r\n\t}\r\n\r\n\tconst handleButton3 = () => {\r\n\t\tsetnameOfClass3('select-button-s')\r\n\t\tsetnameOfClass2('select-button')\r\n\t\tsetnameOfClass1('select-button')\r\n\t\tprops.updateSize(5)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='select'>\r\n\t\t\t<button className={nameOfClass1} onClick={handleButton1}>\r\n\t\t\t\t3 in a row\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className={nameOfClass2} onClick={handleButton2}>\r\n\t\t\t\t4 in a row\r\n\t\t\t</button>\r\n\r\n\t\t\t<button className={nameOfClass3} onClick={handleButton3}>\r\n\t\t\t\t5 in a row\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Squarre from './squarre/Squarre'\r\nimport Select from './../select/Select'\r\nimport './css/board.style.min.css'\r\n\r\nexport default function Board(props) {\r\n\tconst [boardSize, setboardSize] = useState('board-body-' + props.size)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetboardSize('board-body-' + props.size)\r\n\t}, [setboardSize, props.size])\r\n\r\n\tlet element = <p></p>\r\n\t// Definit une classe name pour le button\r\n\tif (props.state.isFinished) {\r\n\t\telement = <p>Winner: {props.state.isX ? 'O' : 'X'}</p>\r\n\t\t//Update button classname en cas de victoire\r\n\t\t// props.state.lastPosition\r\n\t} else if (\r\n\t\t!props.state.isFinished &&\r\n\t\tprops.state.stepNumber === props.size * props.size\r\n\t) {\r\n\t\telement = <p>Draw</p>\r\n\t} else if (!props.state.isFinished) {\r\n\t\telement = <p>Current Player: {props.state.isX ? 'X' : 'O'}</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='board'>\r\n\t\t\t<h1 className='board-title'>Tic Tac Toe</h1>\r\n\t\t\t<p className='board-message'>Choose your game size</p>\r\n\t\t\t<div>\r\n\t\t\t\t<Select value={props.size} updateSize={props.updateSize} />\r\n\t\t\t</div>\r\n\t\t\t<div className='board-element'>{element}</div>\r\n\r\n\t\t\t<div className={boardSize}>\r\n\t\t\t\t{props.boardCopy.map((squarre, index) => (\r\n\t\t\t\t\t<Squarre\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\t\tvalue={squarre}\r\n\t\t\t\t\t\tlastPos={props.state.lastPosition}\r\n\t\t\t\t\t\tsize={props.size}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './css/travel.style.min.css'\r\n\r\nexport default function Travel(props) {\r\n\tconst [positionColor, setpositionColor] = useState(0)\r\n\r\n\tconst handleClick = (index) => {\r\n\t\tprops.jumpTo(index)\r\n\t\tsetpositionColor(index)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetpositionColor(props.history.length - 1)\r\n\t}, [props.history, setpositionColor])\r\n\r\n\treturn (\r\n\t\t<div className='travel'>\r\n\t\t\t<p className='travel-title'>Time Machine</p>\r\n\t\t\t<ul>\r\n\t\t\t\t{props.history.map((arr, index) => {\r\n\t\t\t\t\treturn positionColor === index ? (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index + 'x'}\r\n\t\t\t\t\t\t\tonClick={() => handleClick(index)}\r\n\t\t\t\t\t\t\tclassName='travel-li-s'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tGo To Step {index}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={index + 'x'}\r\n\t\t\t\t\t\t\tonClick={() => handleClick(index)}\r\n\t\t\t\t\t\t\tclassName='travel-li'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tGo To Step {index}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport Board from './board/Board'\r\nimport Travel from './travel/Travel'\r\nimport './css/container.style.min.css'\r\n\r\nexport default function Container(props) {\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='container-board'>\r\n\t\t\t\t<Board\r\n\t\t\t\t\tstate={props.state}\r\n\t\t\t\t\thandleChange={props.handleChange}\r\n\t\t\t\t\tboardCopy={props.boardCopy}\r\n\t\t\t\t\tsize={props.size}\r\n\t\t\t\t\tupdateSize={props.updateSize}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='container-travel'>\r\n\t\t\t\t<Travel history={props.state.boards} jumpTo={props.jumpTo} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\nimport './css/app.style.min.css'\nimport Container from './components/container/Container'\n\nfunction App() {\n\tconst [size, setSize] = useState(3)\n\tconst [state, setState] = useState({\n\t\tboards: [\n\t\t\t{\n\t\t\t\tboard: Array(size * size).fill(null),\n\t\t\t},\n\t\t],\n\t\tisX: true,\n\t\tisFinished: false,\n\t\tstepNumber: 0,\n\t\tboardCopy: Array(size * size).fill(null),\n\t\tlastPosition: [],\n\t})\n\n\t// const [lastPositionColor, setlastPositionColor] = useState([])\n\n\tReact.useEffect(() => {\n\t\tfunction checkWinner(boardArray) {\n\t\t\t//[1,2,3,4,5,6,7,8,9]\n\t\t\tlet testX = 0\n\t\t\tlet testO = 0\n\t\t\tvar blockStart = 0\n\t\t\tvar blockEnd = size\n\t\t\tlet lastPosition = []\n\n\t\t\t//For each lines\n\t\t\tfor (let i = 0; i < size; i++) {\n\t\t\t\tlastPosition = []\n\t\t\t\t//For each buttons\n\t\t\t\tfor (let j = blockStart; j < blockEnd; j++) {\n\t\t\t\t\tif (boardArray[j] === 'X') {\n\t\t\t\t\t\ttestX += 1\n\t\t\t\t\t} else if (boardArray[j] === 'O') {\n\t\t\t\t\t\ttestO += 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (testX === size || testO === size) {\n\t\t\t\t\treturn lastPosition\n\t\t\t\t}\n\n\t\t\t\ttestX = 0\n\t\t\t\ttestO = 0\n\t\t\t\tblockStart += size\n\t\t\t\tblockEnd += size\n\t\t\t}\n\n\t\t\ttestX = 0\n\t\t\ttestO = 0\n\t\t\tblockStart = 0\n\t\t\tblockEnd = size * size - 2\n\n\t\t\t//[1,2,3,4,5,6,7,8,9]\n\t\t\t//[1,2,3,4, 5,6,7,8,  9,10,11,12,   13,14,15,16]\n\n\t\t\t//For each columns\n\t\t\tfor (let i = 0; i < size; i++) {\n\t\t\t\tlastPosition = []\n\t\t\t\t//For each buttons\n\t\t\t\tfor (let j = blockStart; j < blockEnd; j += size) {\n\t\t\t\t\t// console.log(j)\n\t\t\t\t\tif (boardArray[j] === 'X') {\n\t\t\t\t\t\ttestX += 1\n\t\t\t\t\t} else if (boardArray[j] === 'O') {\n\t\t\t\t\t\ttestO += 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (testX === size || testO === size) {\n\t\t\t\t\treturn lastPosition\n\t\t\t\t}\n\n\t\t\t\ttestX = 0\n\t\t\t\ttestO = 0\n\t\t\t\tblockStart += 1\n\t\t\t\tblockEnd += 1\n\t\t\t}\n\n\t\t\ttestX = 0\n\t\t\ttestO = 0\n\t\t\tblockStart = 0\n\t\t\tblockEnd = size * size\n\t\t\tlet increment = size + 1\n\t\t\t//[1,2,3,4,5,6,7,8,9]\n\t\t\t//[0,4,8]\n\t\t\t//[6,4,2]\n\t\t\t//[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\n\t\t\t//[0,4,8]\n\t\t\t//[6,4,2]\n\t\t\t//For each diags\n\t\t\tfor (let index = 0; index < 2; index++) {\n\t\t\t\tlastPosition = []\n\t\t\t\tfor (let i = blockStart; i < blockEnd; i += increment) {\n\t\t\t\t\t// console.log(i)\n\t\t\t\t\tif (boardArray[i] === 'X') {\n\t\t\t\t\t\ttestX += 1\n\t\t\t\t\t} else if (boardArray[i] === 'O') {\n\t\t\t\t\t\ttestO += 1\n\t\t\t\t\t}\n\t\t\t\t\tlastPosition.push(i)\n\t\t\t\t}\n\t\t\t\tif (testX === size || testO === size) {\n\t\t\t\t\treturn lastPosition\n\t\t\t\t}\n\n\t\t\t\ttestX = 0\n\t\t\t\ttestO = 0\n\t\t\t\tblockStart = size - 1\n\t\t\t\tblockEnd = size * size - 2\n\t\t\t\tincrement = size - 1 //2 4 6, or 3,6,9,12\n\t\t\t}\n\t\t}\n\t\t// function checkWinner(i) {\n\t\t// \tconsole.log(i)\n\t\t// }\n\n\t\tlet boardsCopy = state.boards.slice()\n\t\tlet currentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\tlet lastPosition = checkWinner(currentFBoard.board)\n\n\t\tif (lastPosition) {\n\t\t\tsetState((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tisFinished: true,\n\t\t\t\tlastPosition: lastPosition,\n\t\t\t}))\n\t\t}\n\t}, [state.boards, size, setState])\n\n\t//Update board and size\n\tconst updateSize = (selectedSize) => {\n\t\tsetState((currentCount) => ({\n\t\t\t...currentCount,\n\t\t\tboards: [\n\t\t\t\t{\n\t\t\t\t\tboard: Array(selectedSize * selectedSize).fill(null),\n\t\t\t\t},\n\t\t\t],\n\t\t\tisX: true,\n\t\t\tisFinished: false,\n\t\t\tstepNumber: 0,\n\t\t\tboardCopy: Array(selectedSize * selectedSize).fill(null),\n\t\t\tlastPosition: [],\n\t\t}))\n\t\tsetSize((prev) => selectedSize)\n\t}\n\n\t//travel component change\n\tconst jumpTo = (i) => {\n\t\tlet boardsCopy = state.boards.slice()\n\t\t// // //Copie le dernier board du boards\n\t\tlet currentFBoard = boardsCopy[i]\n\t\t// console.log(currentFBoard)\n\t\tlet currentFBoardCopy = currentFBoard.board.slice()\n\n\t\tsetState((prev) => ({\n\t\t\t...prev,\n\t\t\tstepNumber: i,\n\t\t\tisX: i % 2 === 0,\n\t\t\tboardCopy: currentFBoardCopy.slice(),\n\t\t\tlastPosition: [],\n\t\t\tisFinished: false,\n\t\t}))\n\n\t\t// console.log(currentFBoardCopy)\n\t\t// console.log(state.stepNumber)\n\t\t// console.log(state.isX)\n\t}\n\n\t//Handle button change\n\tconst handleChange = (index) => {\n\t\t// //Copie tout le boards\n\t\tlet boardsCopy = state.boards.slice(0, state.stepNumber + 1)\n\t\t// // //Copie le dernier board du boards\n\t\tlet currentFBoard = boardsCopy[boardsCopy.length - 1]\n\t\tlet currentFBoardCopy = currentFBoard.board.slice()\n\n\t\tif (state.isFinished || currentFBoardCopy[index]) {\n\t\t\treturn\n\t\t}\n\n\t\tlet value = state.isX ? 'X' : 'O'\n\n\t\tcurrentFBoardCopy[index] = value\n\n\t\tsetState((currentCount) => ({\n\t\t\t...currentCount,\n\t\t\tboards: boardsCopy.concat([\n\t\t\t\t{\n\t\t\t\t\tboard: currentFBoardCopy,\n\t\t\t\t},\n\t\t\t]),\n\t\t\tisX: !currentCount.isX,\n\t\t\tstepNumber: boardsCopy.length,\n\t\t\tboardCopy: currentFBoardCopy.slice(),\n\t\t}))\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Container\n\t\t\t\tboardCopy={state.boardCopy}\n\t\t\t\tstate={state}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tjumpTo={jumpTo}\n\t\t\t\tsize={size}\n\t\t\t\tupdateSize={updateSize}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}